{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "147efe20",
   "metadata": {},
   "source": [
    "---\n",
    "title: \"Using Genetic Algorithms to Optimize Feature Selection in Regression Modeling\"\n",
    "author: \"Oluwaseun Daniel Fowotade\"\n",
    "date: \"12/20/2024\"\n",
    "description: \"Using Genetic Algorithms to optimize feature selection in regression modeling.\"\n",
    "format:\n",
    "  html:\n",
    "    toc: true\n",
    "    toc-location: left\n",
    "    code-fold: true\n",
    "    highlight-style: tango\n",
    "execute:\n",
    "  warning: false\n",
    "  message: false\n",
    "jupyter: ir\n",
    "categories:\n",
    "  - Machine Learning\n",
    "  - Genetic Algorithms\n",
    "  - Feature Selection\n",
    "  - Statistics\n",
    "  - Regression\n",
    "---\n",
    "\n",
    "![](/Assets/Images/GA.jpeg)\n",
    "\n",
    "# Overview of Genetic Algorithm\n",
    "\n",
    "Feature selection is a crucial step in building efficient machine learning models, especially in the context of regression. It involves selecting a subset of relevant features from a larger set, aiming to improve model performance, reduce overfitting, and increase interpretability. Traditional feature selection methods, such as backward elimination or stepwise regression, can struggle when dealing with high-dimensional or complex data. These methods may fail to capture nonlinear relationships between features and can be computationally expensive for large datasets.\n",
    "\n",
    "Genetic algorithms (GAs), inspired by the principles of natural selection, offer a promising approach to overcome these challenges. First proposed by John Holland in 1975, GAs are heuristic optimization techniques that simulate the process of natural evolution. In a GA, a population of candidate solutions evolves over generations using genetic operations like selection, crossover, and mutation.\n",
    "\n",
    "This project applies GAs to feature selection in regression tasks, where the goal is to minimize prediction error and avoid overfitting. By leveraging the power of genetic evolution, the GA can efficiently explore large, high-dimensional spaces and identify the most relevant features for building robust predictive models.\n",
    "\n",
    "# Methodology of Genetic Algorithm\n",
    "\n",
    "The application of genetic algorithms to feature selection in regression models involves several key steps:\n",
    "\n",
    "## Chromosome Encoding and Representation\n",
    "\n",
    "Each candidate solution is represented as a chromosome, a binary vector where each bit represents the inclusion (`1`) or exclusion (`0`) of a feature. If a dataset contains (C) features, the chromosome length is (C), and each gene corresponds to a specific feature.\n",
    "\n",
    "For example: (1, 0, 1, 0, 1) Features 1, 3, and 5 selected, while 2 and 4 are excluded.\n",
    "\n",
    "## Population Initialization\n",
    "\n",
    "The algorithm starts by initializing a population of chromosomes randomly. The size of the population, (P), is critical as it influences the diversity of solutions. A larger population ensures more diversity, preventing premature convergence, while a smaller population might speed up the process but risk missing better solutions. Typically, the population size is chosen so that:\n",
    "\n",
    "\\[ C \\leq P \\leq 2C \\]\n",
    "\n",
    "where (C) is the number of features.\n",
    "\n",
    "## Selection\n",
    "\n",
    "The selection step involves choosing individuals from the population based on their fitness to act as parents for the next generation. The fitness of a chromosome is determined by evaluating its associated feature subset in a regression model, typically using the mean squared error (MSE) as the performance metric. Tournament selection is often used, where a subset of chromosomes is randomly chosen, and the one with the best fitness is selected as a parent.\n",
    "\n",
    "## Crossover\n",
    "\n",
    "Once parents are selected, they undergo genetic operations to create offspring. Crossover involves swapping parts of two parent chromosomes to produce offspring. A common method is single-point crossover, where a random crossover point is chosen, and the genes before and after this point are exchanged between the parents.\n",
    "\n",
    "## Mutation\n",
    "\n",
    "Mutation introduces small random changes to maintain genetic diversity and avoid local optima. For instance, a mutation may flip the value of a random bit in the chromosome (e.g., changing `0` to `1` or vice versa). The mutation rate is usually kept low (e.g., 1% per generation) to ensure diversity without disrupting good solutions.\n",
    "\n",
    "## Fitness Evaluation\n",
    "\n",
    "Each chromosome is evaluated using a regression model trained on the selected features. The fitness function is:\n",
    "\n",
    "$$\n",
    "\\text{Fitness}(\\vartheta) = \\frac{1}{N} \\sum_{i=1}^{N} (y_i - \\hat{y}_i)^2\n",
    "$$\n",
    "\n",
    "where $(y_i)$ are actual values and \\\\( \\\\hat{y}\\_i \\\\) are predictions.\n",
    "\n",
    "## Elitism\n",
    "\n",
    "To ensure that the best solutions are preserved, elitism is applied. This technique guarantees that the best-performing chromosome from the current generation is directly passed to the next generation without any changes. This helps prevent the loss of high-quality solutions during the evolution process.\n",
    "\n",
    "## Termination\n",
    "\n",
    "The algorithm runs for a set number of generations or until a stopping criterion is met. Common criteria include reaching a maximum number of generations (e.g., 100) or achieving a satisfactory fitness level. Once the algorithm terminates, the best chromosome found represents the optimal feature subset.\n",
    "\n",
    "# Final Model\n",
    "\n",
    "The genetic algorithm (GA) was implemented to identify an optimal subset of features for the classification task in the Sonar dataset. Over 89 iterations, the algorithm demonstrated consistent improvement in fitness, ultimately achieving a best fitness value of 0.3077. This fitness value, defined as (1 - \\text{accuracy}), indicates a corresponding predictive accuracy of 69.23% on the training set. The selected feature subset was designed to maximize classification performance while minimizing redundancy and over-fitting.\n",
    "\n",
    "The GA selected the following features from the original set of 60 predictors:\n",
    "\n",
    "Selected features: 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 22, 24, 25, 28, 29, 30, 33, 37, 39, 41, 43, 47, 49, 51, 52, 58.\n",
    "\n",
    "This reduced set of features was used to train a k-Nearest Neighbors (k-NN) classifier with (k = 3), selected based on a grid search for hyperparameter optimization. The training utilized 5-fold cross-validation to ensure model robustness and generalizability. On the test set, the following confusion matrix was obtained:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2b0eab03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "\n",
       "Table: Confusion Matrix: Predicted vs Actual\n",
       "\n",
       "|  Actual  | Predicted.M | Predicted.R |\n",
       "|:--------:|:-----------:|:-----------:|\n",
       "| Actual M |     26      |     10      |\n",
       "| Actual R |      7      |     19      |"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create confusion matrix as a data frame\n",
    "conf_matrix <- data.frame(\n",
    "  \"Actual\" = c(\"Actual M\", \"Actual R\"),\n",
    "  \"Predicted M\" = c(26, 7),\n",
    "  \"Predicted R\" = c(10, 19)\n",
    ")\n",
    "\n",
    "#kable to create a nicely formatted table\n",
    "knitr::kable(conf_matrix, caption = \"Confusion Matrix: Predicted vs Actual\", align = \"c\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43e4b9be",
   "metadata": {},
   "source": [
    "From the confusion matrix, the following performance metrics were computed:\n",
    "\n",
    "-   **Accuracy**: 72.58%\n",
    "-   **Sensitivity (True Positive Rate for Mines)**: 78.79%\n",
    "-   **Specificity (True Negative Rate for Rocks)**: 65.52%\n",
    "-   **Kappa Statistic**: 0.4458\n",
    "-   **Balanced Accuracy**: 72.15%\n",
    "\n",
    "The k-NN classifier displayed a solid ability to correctly classify mines, as indicated by the relatively high sensitivity of 78.79%. However, the specificity of 65.52% suggests room for improvement in accurately identifying rocks, particularly in cases with overlapping feature distributions.\n",
    "\n",
    "# Conclusion\n",
    "\n",
    "The application of a genetic algorithm (GA) for feature selection in the Sonar dataset successfully reduced the dimensional from 60 to 27 features, enabling efficient model training while maintaining predictive performance. The GAâ€™s ability to explore a vast and complex search space was instrumental in identifying relevant features that traditional methods might have overlooked.\n",
    "\n",
    "The k-NN classifier trained on the selected features achieved an accuracy of 72.58% on the test set. However, there are several areas for improvement:\n",
    "\n",
    "- ##  **Population Size**: A larger population size could enhance the diversity of candidate solutions, preventing premature convergence to suboptimal solutions.\n",
    "-   **Mutation Rate**: Adjusting the mutation rate could introduce more variation in the search space. For example, increasing the mutation rate in earlier generations might explore more diverse feature subsets, while reducing it in later generations could refine promising solutions.\n",
    "-   **Crossover Strategy**: Employing advanced crossover techniques, such as uniform or multi-point crossover, could enhance the recombination of parent solutions, potentially leading to better offspring.\n",
    "-   **Termination Criteria**: Allowing the GA to run for additional generations or introducing a dynamic stopping criterion based on convergence rates could yield more refined feature subsets.\n",
    "-   **Fitness Function**: Experimenting with alternative fitness functions, such as F1-score or balanced accuracy, could prioritize models that address class imbalance more effectively.\n",
    "\n",
    "By fine-tuning these parameters, the GA could further enhance its ability to select the most discriminating features, improving classification accuracy and robustness.\n",
    "\n",
    "This analysis underscores the effectiveness of genetic algorithms in tackling complex feature selection challenges, particularly for high-dimensional data sets with potential nonlinear relationships among features. Future research could integrate hybrid optimization techniques, combining GAs with other meta heuristic methods like particle swarm optimization or simulated annealing, to achieve even better results.\n",
    "\n",
    "The results illustrate that intelligent feature selection not only reduces computational costs but also leads to models that are easier to interpret and maintain, making GAs a valuable tool in the arsenal of modern machine learning techniques.\n",
    "\n",
    "# References\n",
    "\n",
    "-   Kaya, Y. (2018). Comparison of Using the Genetic Algorithm and Cuckoo Search for Feature Selection.\n",
    "-   Raymer, M.L. et al. (2000). Dimensionality reduction using genetic algorithms. IEEE Transactions on Evolutionary Computation.\n",
    "-   Bindu, M.G. & Sabu, M.K. (2020). A Hybrid Feature Selection Approach Using Artificial Bee Colony and Genetic Algorithm.\n",
    "-   Givens, G.H. & Hoeting, J.A. (2012). Computational Statistics, Vol. 703. John Wiley & Sons.\n",
    "\n",
    "# Appendix\n",
    "\n",
    "## Genetic Algorithm Implementation on Sonar Dataset\n",
    "\n",
    "### Loading Required Libraries and Data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "27fc582d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Loading required package: foreach\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Loading required package: iterators\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Package 'GA' version 3.2.4\n",
      "Type 'citation(\"GA\")' for citing this R package in publications.\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "Attaching package: 'GA'\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from 'package:utils':\n",
      "\n",
      "    de\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Loading required package: ggplot2\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Loading required package: lattice\n",
      "\n"
     ]
    }
   ],
   "source": [
    "library(GA)\n",
    "library(caret)\n",
    "library(mlbench)\n",
    "\n",
    "# Load the Sonar dataset\n",
    "data(Sonar)\n",
    "Sonar$Class <- as.factor(Sonar$Class) # Ensure the target variable is a factor\n",
    "\n",
    "# Split data into training and testing sets\n",
    "set.seed(123) # For reproducibility\n",
    "trainIndex <- createDataPartition(Sonar$Class, p = 0.7, list = FALSE)\n",
    "trainData <- Sonar[trainIndex, ]\n",
    "testData <- Sonar[-trainIndex, ]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb5f32c2",
   "metadata": {},
   "source": [
    "### Defining the Fitness Function for Feature Selection\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ca33eab0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the fitness function\n",
    "fitness_function <- function(x) {\n",
    "  selected_features <- which(x == 1) # Indices of selected features\n",
    "  \n",
    "  # If no features are selected, assign a large fitness value (penalty)\n",
    "  if (length(selected_features) == 0) return(Inf)\n",
    "  \n",
    "  # Subset the training data with the selected features\n",
    "  selected_train <- trainData[, c(selected_features, 61)] # Include 'Class'\n",
    "  \n",
    "  # Train a k-NN model\n",
    "  ctrl <- trainControl(method = \"cv\", number = 5)\n",
    "  knn_model <- train(Class ~ ., data = selected_train, method = \"knn\", \n",
    "                     trControl = ctrl, tuneGrid = data.frame(k = 1))\n",
    "  \n",
    "  # Return fitness value (1 - accuracy to minimize error)\n",
    "  fitness_value <- 1 - max(knn_model$results$Accuracy)\n",
    "  return(fitness_value)\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98666d35",
   "metadata": {},
   "source": [
    "```         \n",
    "```\n",
    "\n",
    "## Running the Genetic Algorithm\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "131a6083",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 1 | Mean = 0.1680522 | Best = 0.2391461\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 2 | Mean = 0.1735294 | Best = 0.2391461\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 3 | Mean = 0.1759514 | Best = 0.2391461\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 4 | Mean = 0.1813278 | Best = 0.2391461\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 5 | Mean = 0.1757665 | Best = 0.2393924\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 6 | Mean = 0.1828765 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 7 | Mean = 0.1781392 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 8 | Mean = 0.1847412 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 9 | Mean = 0.1869241 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 10 | Mean = 0.1886102 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 11 | Mean = 0.1939878 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 12 | Mean = 0.1903678 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 13 | Mean = 0.1993767 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 14 | Mean = 0.1980716 | Best = 0.2540230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 15 | Mean = 0.1937833 | Best = 0.2555829\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 16 | Mean = 0.1926673 | Best = 0.2555829\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 17 | Mean = 0.1877202 | Best = 0.2555829\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 18 | Mean = 0.185753 | Best = 0.260000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 19 | Mean = 0.1842003 | Best = 0.2600000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 20 | Mean = 0.1971665 | Best = 0.2600000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 21 | Mean = 0.1958624 | Best = 0.2660755\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 22 | Mean = 0.1957360 | Best = 0.2660755\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 23 | Mean = 0.2017741 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 24 | Mean = 0.196908 | Best = 0.274023\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 25 | Mean = 0.1948959 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 26 | Mean = 0.1974177 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 27 | Mean = 0.2007126 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 28 | Mean = 0.2018808 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 29 | Mean = 0.2000319 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 30 | Mean = 0.208091 | Best = 0.274023\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 31 | Mean = 0.2107612 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 32 | Mean = 0.2085021 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 33 | Mean = 0.2049212 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 34 | Mean = 0.2075839 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 35 | Mean = 0.2106174 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 36 | Mean = 0.2072158 | Best = 0.2740230\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 37 | Mean = 0.2078000 | Best = 0.2741379\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 38 | Mean = 0.2109856 | Best = 0.2741379\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 39 | Mean = 0.2107938 | Best = 0.2741379\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 40 | Mean = 0.2141228 | Best = 0.2741379\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 41 | Mean = 0.2118667 | Best = 0.2952381\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 42 | Mean = 0.2072361 | Best = 0.2952381\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 43 | Mean = 0.2125681 | Best = 0.2952381\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 44 | Mean = 0.2125563 | Best = 0.2952381\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 45 | Mean = 0.2114686 | Best = 0.2952381\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 46 | Mean = 0.2161307 | Best = 0.2952381\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 47 | Mean = 0.2289176 | Best = 0.3212644\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 48 | Mean = 0.2328535 | Best = 0.3212644\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 49 | Mean = 0.2339862 | Best = 0.3212644\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 50 | Mean = 0.2373701 | Best = 0.3212644\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 51 | Mean = 0.2418594 | Best = 0.3212644\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 52 | Mean = 0.2476099 | Best = 0.3291133\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 53 | Mean = 0.2477376 | Best = 0.3291133\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 54 | Mean = 0.2437938 | Best = 0.3291133\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 55 | Mean = 0.2490690 | Best = 0.3294253\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 56 | Mean = 0.2584273 | Best = 0.3294253\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 57 | Mean = 0.2577984 | Best = 0.3294253\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 58 | Mean = 0.2609612 | Best = 0.3294253\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 59 | Mean = 0.2552857 | Best = 0.3294253\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 60 | Mean = 0.2585452 | Best = 0.3294253\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 61 | Mean = 0.2510910 | Best = 0.3294253\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 62 | Mean = 0.2670933 | Best = 0.3345977\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 63 | Mean = 0.2699327 | Best = 0.3636453\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 64 | Mean = 0.2662998 | Best = 0.3636453\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 65 | Mean = 0.2649008 | Best = 0.3636453\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 66 | Mean = 0.2650059 | Best = 0.3636453\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 67 | Mean = 0.2769990 | Best = 0.3636453\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 68 | Mean = 0.2793964 | Best = 0.3636453\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 69 | Mean = 0.2733383 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 70 | Mean = 0.2746039 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 71 | Mean = 0.2773366 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 72 | Mean = 0.2772378 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 73 | Mean = 0.2705379 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 74 | Mean = 0.2710571 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 75 | Mean = 0.2703310 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 76 | Mean = 0.2769672 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 77 | Mean = 0.2862611 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 78 | Mean = 0.2788966 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 79 | Mean = 0.2770125 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 80 | Mean = 0.2758213 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 81 | Mean = 0.2805373 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 82 | Mean = 0.2811612 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 83 | Mean = 0.2812105 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 84 | Mean = 0.2845800 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 85 | Mean = 0.2736368 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 86 | Mean = 0.2713576 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 87 | Mean = 0.2734690 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 88 | Mean = 0.2683113 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 89 | Mean = 0.2611491 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 90 | Mean = 0.2540072 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 91 | Mean = 0.2643452 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 92 | Mean = 0.2678791 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 93 | Mean = 0.2670039 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 94 | Mean = 0.2731304 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 95 | Mean = 0.2646749 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 96 | Mean = 0.2710936 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 97 | Mean = 0.2621143 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 98 | Mean = 0.2651343 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 99 | Mean = 0.2701452 | Best = 0.3970115\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GA | iter = 100 | Mean = 0.2667343 | Best = 0.3970115\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "â”€â”€ \u001b[1mGenetic Algorithm\u001b[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ \n",
       "\n",
       "GA settings: \n",
       "Type                  =  binary \n",
       "Population size       =  50 \n",
       "Number of generations =  100 \n",
       "Elitism               =  2 \n",
       "Crossover probability =  0.8 \n",
       "Mutation probability  =  0.1 \n",
       "\n",
       "GA results: \n",
       "Iterations             = 100 \n",
       "Fitness function value = 0.3970115 \n",
       "Solution = \n",
       "     x1 x2 x3 x4 x5 x6 x7 x8 x9 x10  ...  x59 x60\n",
       "[1,]  0  1  0  0  1  0  1  0  0   1         1   1"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "set.seed(123) # For reproducibility\n",
    "\n",
    "# Run the Genetic Algorithm\n",
    "ga_model <- ga(\n",
    "  type = \"binary\",\n",
    "  fitness = fitness_function,\n",
    "  nBits = ncol(Sonar) - 1, # 60 features\n",
    "  popSize = 50,\n",
    "  maxiter = 100,\n",
    "  pcrossover = 0.8,\n",
    "  pmutation = 0.1,\n",
    "  elitism = 2,\n",
    "  run = 50,\n",
    "  monitor = TRUE\n",
    ")\n",
    "\n",
    "# Summary of GA results\n",
    "summary(ga_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3fe4e9df",
   "metadata": {},
   "source": [
    "### Selected Features and Final Model Evaluation\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "056a2f86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Confusion Matrix and Statistics\n",
       "\n",
       "          Reference\n",
       "Prediction  M  R\n",
       "         M 23 13\n",
       "         R 10 16\n",
       "                                          \n",
       "               Accuracy : 0.629           \n",
       "                 95% CI : (0.4969, 0.7484)\n",
       "    No Information Rate : 0.5323          \n",
       "    P-Value [Acc > NIR] : 0.0801          \n",
       "                                          \n",
       "                  Kappa : 0.2503          \n",
       "                                          \n",
       " Mcnemar's Test P-Value : 0.6767          \n",
       "                                          \n",
       "            Sensitivity : 0.6970          \n",
       "            Specificity : 0.5517          \n",
       "         Pos Pred Value : 0.6389          \n",
       "         Neg Pred Value : 0.6154          \n",
       "             Prevalence : 0.5323          \n",
       "         Detection Rate : 0.3710          \n",
       "   Detection Prevalence : 0.5806          \n",
       "      Balanced Accuracy : 0.6243          \n",
       "                                          \n",
       "       'Positive' Class : M               \n",
       "                                          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Extract best chromosome (selected features)\n",
    "best_chromosome <- ga_model@solution\n",
    "selected_features <- which(best_chromosome == 1)\n",
    "\n",
    "# Train the final k-NN model using selected features\n",
    "selected_train <- trainData[, c(selected_features, 61)]\n",
    "selected_test <- testData[, c(selected_features, 61)]\n",
    "\n",
    "final_knn_model <- train(Class ~ ., data = selected_train, method = \"knn\",\n",
    "                         trControl = trainControl(method = \"cv\", number = 5),\n",
    "                         tuneGrid = data.frame(k = 1))\n",
    "\n",
    "# Make predictions and evaluate\n",
    "predictions <- predict(final_knn_model, newdata = selected_test)\n",
    "conf_matrix <- confusionMatrix(predictions, selected_test$Class)\n",
    "\n",
    "# Print results\n",
    "conf_matrix"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c56f181d",
   "metadata": {},
   "source": [
    "### Comparing Performance with All Features\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "05665ca8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy with Selected Features:  0.6290323 \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy with All Features:  0.7903226 \n"
     ]
    }
   ],
   "source": [
    "# Train a model using all features\n",
    "model_all_features <- train(Class ~ ., data = trainData, method = \"knn\", \n",
    "                            trControl = trainControl(method = \"cv\", number = 5), \n",
    "                            tuneGrid = data.frame(k = 1))\n",
    "\n",
    "# Evaluate model on the test set\n",
    "predictions_all <- predict(model_all_features, newdata = testData)\n",
    "conf_matrix_all <- confusionMatrix(predictions_all, testData$Class)\n",
    "\n",
    "# Comparison\n",
    "cat(\"Accuracy with Selected Features: \", conf_matrix$overall[\"Accuracy\"], \"\\n\")\n",
    "cat(\"Accuracy with All Features: \", conf_matrix_all$overall[\"Accuracy\"], \"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "35f712a1",
   "metadata": {},
   "source": [
    "### Visualizing the GA Progress and Results\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "20b8c1d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "Plot with title \"GA Optimization Progress\""
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(ggplot2)\n",
    "\n",
    "# Plot GA optimization progress\n",
    "plot(ga_model, main = \"GA Optimization Progress\", col = \"blue\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b9add58",
   "metadata": {},
   "source": [
    "## Selected Features via Genetic Algorithm\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ba8d950f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Feature Selected\n",
      "1       1        0\n",
      "2       2        1\n",
      "3       3        0\n",
      "4       4        0\n",
      "5       5        1\n",
      "6       6        0\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nBFFcehrjXndJZnoUiZe51POREwAChsETAFCPdHLpJSaisN3776lZQhbyyG/2yWILioq5qLp4\nfsqRC1cLCh5xzJlCdvYuIiI6Gh+vMrSi5Pq56JScgvslUiJy7T6VO/lbh5b4unXs9lMiZ9zG\nN3nZ1C6ZpxOuKC1173Liea6E65dOw8YG0/kdOyonlZFe37YljNyDB/aq03wBNGoI7ACgPvEc\nNdOHiP6cN/azfbdVYrLSzLBlK88TiacN6ElE8tiC6M81a5SmrCuKWDY00Evc7bsYrgGaRj7D\nQ8REmWE/b77Oir2kaRv+4+3r1jF4R64REYm8h04VqSYvvfDnhoNE4hD/voxPi5+W6Ji8fLno\n8M1HmckXnViz5k+NtVRPWAXPXu6Zt2py4OQV24/s2zA/aMiHB90XLJ9V/187ASBcCOwAoF7p\n+uGv4WNEJLnw01i7Lj7T563dfuTIkSNH9m1Y8eGorm92/XCfhNwX/Py5n/xGrVXwkvAxIkpa\nNdht2Nf7UnIKCgpyUvatmOg3KkxCojHLPvLnHPhg1Pfjnxe4k2TfzH79Z649dbWgoKDg6qkN\nnwYOnhtN5L7giymygapW475aNkZESasmB8oXy0nZ91Vg0KIkEk0NndFXFsE0NRIR0dnjkVcL\nZNfi+CYvXy7zR3+/99YeSckpKLh6au3MwMmr6v8sdkREZOT5eeSRrVPbpfw0JXDsoiP/DlgT\nHfVdw3lRLIAQ4XcVANQvRg4zdia+uWzO3F8jMs/8tvrMb6sZX4o8Zyz7+dt3e5szF9945EXz\nqd9tj1w6NnIpa8l1K1jTz7GY+323f/+rqZ9+f2bDx4M2fFz5uW3g4rCwRX6Kt2TN2HjkhdHY\nj3exFrOdEB65IdhK/l9Pv/fd/+//ksImisNI9GV0wXcD+CZP5n7f7djxaNonGzZ/HLj544qs\nf7p6xrW530bpVnF1w9x9yvf7p3xf19mogk4zDrzSMHcNQAODwA4A6h0j66Hf7B/65aOryXFJ\nCReyComIXrfu7t1voJsTxwsozN3nbEt7d3HCseizqXlPZYv6DOnVmTmswdI9NDSUPRjVyDpo\nVbT/pylxp2JOZxUSkYWjb7+BXj0sjVWS33nj3WUJEVFHsgqJLBx9je9GJAAAIABJREFUfYb0\nc7FgJG4y4Juoy332R17Ie0rU3uAhUWv+yRs5BIefGz5Pnvzr1p6Bowa7vIpZV0TuQhg7CwC1\nC4EdANRTxq2cPAOcPAN4LWxk0tlzTGfPMeq+dx6/zHk810Yse/hM7uHDJ/nJnT3Vf2/hEjDD\nRTWreifvM3uZ1rUAAFTgGTsAAAAAgcAVOwCAhi0tLW3WrFnVlVS1pMPf878f5vxeDXO7PP+7\n/s/8B1AbENgBADRshYWFJ0+erOtc6KnsyfOyjLt1nQsA4UBgBwDQUHl4eDSgZGthK7WTc4D6\nrMmrV6/qOg8AAAAAUA0weAIAAABAIBDYAQAAAAgEAjsAAAAAgUBgBwAAACAQCOwAAAAABAKB\nHQAAAIBAILADAAAAEAgEdgAAAAACgcAOAAAAQCAQ2AEAAAAIBAI7AAAAAIFAYAcAAAAgEAjs\nAAAAAAQCgR0AAACAQCCwAwAAABAIBHYAAAAAAoHADgAAAEAgENgBAAAACAQCOwAAAACBQGAH\nAAAAIBAI7AAAAAAEAoEdAAAAgEAgsAMAAAAQCAR2AAAAAAKBwA4AAABAIBDYAQAAAAgEAjsA\nAAAAgUBgBwAAACAQCOwAAAAABAKBHQAAAIBAILADAAAAEAgEdgAAAAACgcAOAAAAQCAQ2AEA\nAAAIBAI7AAAAAIFAYAcAAAAgEAjsAAAAAAQCgR0AAACAQCCwAwAAABAIBHYAAAAAAoHADgAA\nAEAgENgBAAAACAQCOwAAAACBQGAHAAAAIBAI7AAAAAAEAoEdAAAAgEAgsAMAAAAQCAR2AAAA\nAAKBwA4AAABAIBDYAQAAAAgEAjsAAAAAgUBgBwAAACAQCOwAAAAABAKBHQAAAIBAGNV1BmrP\nyxf3kk8ciI7JSL+W95iIRHZiB1efIQG+ru2a8k/ln2Pfzlh/afTSg9O6V1O+ygoSdiY2mxLo\nUpVE5Nk6eHBaNeUKAAAAGp7GEti9vHvyx6/XxkiISGQnFrcnKi++m3l+f+b5/ccGzZs7q397\nw7rJmOTk6g/Wxo1eOqVuNg8AAAAC0kgCu4fn/lwbIzHzendRyHAHs4oYrqwo7a+ff/jj5MY9\n3Z0/6d+6TnJW/lJaJ9sFAAAA4Wkcz9hJki+eI3KfNCVIEdURUVNz17FTRonpccbVG8V1lzsA\nAACAatE4rtgZv9aMiJ6X/qvyjaH96BUHR7M+evn4+rm/Ig7Ens+WEIns+vYZGTS6PysgJF2X\nL8mLO/rX0ejE1LzHzCVkD8YREf21eMRfRBVP7mlP8eX95P1/REQnpuY9NrP28B07vl+V6gcA\nAAAEoXEEdmbObr5mp0/vC1tv+PYoP2erZuqjtLvHvv98fdxjM2sP/wk+LUvvZ8bt/2lebOKc\nbz4bxPUYHo/lS1J/W7z4r5skchkY5NWWCtKi9/90Pj136dJpHa26TxhuGHfoQp7LwAnitmRj\nzivFiiXkCd7PjP3ps9NmZrxqQiqVlpWVyf42MjJq2rQpPsfn+Byf43N8js8byudaNY7Ajlr3\nf/8LyZMftx7buOjYRhLZ9XTpJu7Szc3d2aYtM8h7efvQL+vjHrsEr/giWGwi+2x8YMR/v9m8\ndks359Ahbygly2P5F5d2rP7rpplXyP/N9bduSkQ0cUjX7z9f/9fGQ73XBg9726Lp7UMX8jp7\nv/12d54p/nNyy/q4x/ajly6d1l22xHjv3xYv/usxn4ooLS19/Fi+5Ouvv25WEQ8qff7rr7/G\nx8cT0cuXLysblqGhoaxheXh4fPTRR3zS0fD5ypUr4+PjOdMnIjc3t/fee09zOhs3bkxNTZXv\nCZV0PDw8Fi5cyD8/dVUPDeJzrfXw77//xsXFKX1eubybmxsRpaWlKX1euXy/fv0WLlxY0+Va\nuXJlbGwsZ3t7+fKli4vLrFmzaro+169fr7keiKiK/aJBtIdZs2bVdD61Hh+IqM7bgzA+r4X2\noPV88eLFi+TkZM70ZQu89tprNd0eau04qVUjCeyITMRjF4cNzE44f+x8TEZ64qmIxFMRW4nM\nrD3835sxwa2tIRHRjUsn0sk6+O3xFTEVEZnYDx86cF/cX9Hxt4cEdWQnqn35x5fiDj8mlw8m\nyaM6IjJsP2hEwLG8lPx7/5C4Pema4j9pCZeI/MdP7F65hEn3iROHnfr2MK/Qjpf4+PiIiAgN\nC3z00Uc1uomXL19WnsDUSUhIiIyMrGI2NKuFemgQtNbDy5cvjx49qjkRDQvw/yVaFfHx8YcO\nHVL3beUBtEYlJydrrYcq9otaUC3toabxOT7UeXsQhlpoD1rPF2VlZZo3YWhoWNPtof4cJxtN\nYEdE1NTczmt4iNdworKnkryrKRdiz0Wfit+55Orfs1bMH9Le8J/cG3lE1jmxO/9IYa73LL8l\nUWZO3mPqyLrhyWP5v3OTiMy62L7J/N5QHPzj+mCuHGpP8c17dy8R9bazbcb8vpljF3c6fFp7\nFRgZGTVv3lxeHYxWwvl505bNm7/JGiz8/O+HZU+e65qOhs/VbaJJkyZa0zEwMNCcyerKZy3U\nQ4P4XEM9NGnSRMMChoaGWlOonXJpzqRslRqtT1lVaK2HqvSLBtEemjdvXtP55HN80JrJasyP\n4D+vhfagoV9o7lmGhoa11h5q4TipVaMK7BSavi6y6znErueQ8aOjVn8ZFrc9Msl7Rm/Zd3kX\nDu26wLFOyfPnRBxPsmlc/uXLx0S9RRY65U5TioWF97hWMWvZilfSxsbGxsbGPD9v/mZr23f6\nMj/J+f18WcZdXdPR8Lm6TRgYGJibm2tOR9YNNGSyuvJZC/XQID7XUA+yg6a6BSoPeZp3Vi2U\nS3MmVZtctedHVhVa66Eq/aLWPq9Ke1AqRU3kk8/xQadM1lA+BfN5LbQHDf2iug5BVW8PtXCc\n1KpRBHZX9n7y09Zmw9asUL6VStTUevBgn7C4CEnRo4qP/L/cHeLRTHlB9TQuX2hoRpQlKSRS\nfj5PzxRf3rPi+vjFCx2ieQAAABCmRjGPXRvTthLKPBGdXMLx5ePHD4nIyNCAyKJdBzOiuMuX\nX7CWeHFpw5T3P1m0/5ryqjyWf9PGnehx7r1/WEs8jP5hyqwFmy+qTJ6nPUVDq/a9iS6lX33I\nXOBl9u0MjVUAAAAAjUCjCOze6DPI34zyIn76fltC3lPFI5AvX9xL2LZm8zky8/VyExEZungM\ns6fHh3fuTH78smKhktSdOw8/lhg4O3VWTpfH8mZuHv5mdGn7b8fuMpY4eOjc4ydW9p1NiQwM\njYjo+YsXfFN8o1d/XzM6d2hv/P2KJUpuHjp4JK/66gsAAAAapkZxK5ZMPKZ8/UHJio0xe5bN\n2kMiO3HbZkTlxXev5T0mMusybu77sheKGXYZOfuD24s3/rXkowQPLy+blqX3M+NOpUvMuoyb\nGthFdRo7HsubeEyZO/rG4r/Wfz4nibGEqN+ccX1aE5GoXXszoqjd64xvWTn0fbuv9hRb95/4\nn9S/Vx7+v0/TPLy8bIzvZ8adSm9pb0+Pb9ZmnQIAAEC90zgCOyIT++Hzw3oPPn3kWPTV3LuZ\nmY+JSGTXc+DQfv7DmC91aNZx+Pz/Op77KyIqMW5X/GMys+4+cOrMiSN7teMeZ8xjeZPu05au\ndzj4Z0Rs3K74xySy6zvq0wWKN0mI/WeNvrHtVEzELvK1HtbXxkx7im/0mfX1Dy5/RRyIjdoV\nb2bdvefUJW/bXX53CQI7AACAxq2xBHZERE3buQ6Z7jpE22KGZg4+0xf4TOf+9o0hoQeH6LA8\nERGZWHtNWuA1iXtzbT2mLfWYpluKFUssUHzkdvDgNLXLAwAAQGPQKJ6xAwAAAGgMENgBAAAA\nCAQCOwAAAACBQGAHAAAAIBAI7AAAAAAEAoEdAAAAgEAgsAMAAAAQCAR2AAAAAAKBwA4AAABA\nIBDYAQAAAAgEAjsAAAAAgUBgBwAAACAQCOwAAAAABAKBHQAAAIBAILADAAAAEAgEdgAAAAAC\ngcAOAAAAQCAQ2AEAAAAIBAI7AAAAAIFAYAcAAAAgEAjsAAAAAAQCgR0AAACAQCCwAwAAABAI\nBHYAAAAAAoHADgAAAEAgENgBAAAACAQCOwAAAACBQGAHAAAAIBAI7AAAAAAEAoEdAAAAgEAg\nsAMAAAAQCAR2AAAAAAKBwA4AAABAIBDYAQAAAAgEAjsAAAAAgUBgBwAAACAQCOwAAAAABAKB\nHQAAAIBAILADAAAAEAgEdgAAAAACgcAOAAAAQCAQ2AEAAAAIBAI7AAAAAIFAYAcAAAAgEAjs\nAAAAAAQCgR0AAACAQCCwAwAAABAIBHYAAAAAAoHADgAAAEAgENgBAAAACAQCOwAAAACBQGAH\nAAAAIBAI7AAAAAAEAoEdAAAAgEAgsAMAAAAQCAR2AAAAAAKBwA4AAABAIBDYAQAAAAgEAjsA\nAAAAgUBgBwAAACAQCOwAAAAABAKBHQAAAIBAILADAAAAEAgEdgAAAAACgcAOAAAAQCAQ2AEA\nAAAIBAI7AAAAAIFAYAcAAAAgEAjsAAAAAAQCgR0AAACAQCCwAwAAABAIBHYAAAAAAoHADgAA\nAEAgENgBAAAACAQCOwAAAACBQGAHAAAAIBAI7AAAAAAEAoEdAAAAgEAgsAMAAAAQCAR2AAAA\nAAKBwA4AAABAIBDYAQAAAAgEAjsAAAAAgUBgBwAAACAQCOwAAAAABAKBHQAAAIBAILADAAAA\nEAgEdgAAAAACgcAOAAAAQCAQ2AEAAAAIBAI7AAAAAIFAYAcAAAAgEAjsAAAAAAQCgR0AAACA\nQCCwAwAAABAIBHYAAAAAAoHADgAAAEAgENgBAAAACAQCOwAAAACBQGAHAAAAIBAI7AAAAAAE\nAoEdAAAAgEAgsAMAAAAQCAR2AAAAAAKBwA4AAABAIBDYAQAAAAgEAjsAAAAAgUBgBwAAACAQ\nCOwAAAAABAKBHQAAAIBAILADAAAAEAgEdgAAAAACgcAOAAAAQCAQ2AEAAAAIBAI7AAAAAIFA\nYAcAAAAgEAjsAAAAAAQCgR0AAACAQCCwAwAAABAIBHYAAAAAAoHADgAAAEAgENgBAAAACAQC\nOwAAAACBQGAHAAAAIBAI7AAAAAAEAoEdAAAAgEAgsAMAAAAQCAR2AAAAAAKBwA4AAABAIBDY\nAQAAAAgEAjsAAAAAgUBgBwAAACAQCOwAAAAABAKBHQAAAIBAILADAAAAEAgEdgAAAAACgcAO\nAAAAQCAQ2AEAAAAIBAI7AID/b+/OA2M61P+PP80iUdEIMbGlYguiKZpam7i0VC1RLa2l4Wf5\nlovbKkrRoqpK9WrLverSi177FkvsRYNGqC00BCG1xJahSDMqaWaa3x+TRJZZzplMQo/36y85\nc+aZ5zyZmXycM+cMAGgEwQ4AAEAjCHYAAAAaQbADAADQCIIdAACARhDsAAAANIJgBwAAoBEE\nOwAAAI0g2AEAAGgEwQ4AAEAjCHYAAAAaQbADAADQCIIdAACARhDsAAAANIJgBwAAoBEEOwAA\nAI0g2AEAAGgEwQ4AAEAjCHYAAAAaQbADAADQCIIdAACARhDsAAAANIJgBwAAoBEEOwAAAI0g\n2AEAAGgEwQ4AAEAjCHYAAAAaQbADAADQCIIdAACARhDsAAAANIJgBwAAoBEEOwAAAI0g2AEA\nAGgEwQ4AAEAjCHYAAAAaQbADAADQCIIdAACARhDsAAAANIJgBwAAoBEEOwAAAI0g2AEAAGiE\nm7MKZVyPi427fl986rRqUsfLaWUBAACgkIN77O4cXTK6x3MNPtxj/jFpzcAXqjz3YqdOnTq1\nDKzV6sOdd5zWIAAAAJRxJNgZD3za7vm+/1wdl3Dlul5EDJtm/WPhUZGAxp06tQvS6Q98FvHe\nimvO7hQAAAA2ORDs9Gv+M+Go6F4evylxzhs6EcOubf/Si7SZueHQ5s3fn/hxXjedfvG3a085\nv1kAAABYpz7YGY8dWSzS5sMvp3au4+UmYoj+IVJEQju/1NBNRNwCe0d0E4k++rPe6c0CAADA\nOvXB7tLl8yLSpH6D7J/jT+zWiwS1b9Ewe4FXmbIicjctzUktAgAAQIkiX+7kxIEdCSK6zs2a\n5Cwxmowi4u7GmbEAAAAlSX2wqxX4jE4kNu6oUUSMR3esjxHR9QhtkZPj7myOWiqiq1uzulMb\nBQAAgG0O7FYL7TAk6LPJH3TvejGi3u1tM2NEdD3atfESEePN+I1fvz90rl6CJnUIdXqvAAAA\nsMGBYOcWOnzelAPdJmyZ++kWEZGQMUsnh3uJiKTvn9v9s+9FQsZ8PTyUI7EAAAAlyqH45RP6\n0ZakHod3RMffr9PkpZaNK3uYl3vVadiv37RuE0d0ruHhzCYBAABgn6P71dy86rToVqdFgaUN\nBi9aVNSOAAAA4JAinxULAACAR4P6PXaXlg+KmHva7mr1hyyd35sTYwEAAEqM+mBnNKTExMTY\nXa18H6Mj/QAAAMBB6oNd9d4LbrxqKrT49i9HL1y7Er1o2j8PB06JXPlRqI8z2gMAAIBS6oOd\nm5evn1fhxX5+HeuLdOz2xssftHu529tVYtcOqOWE/gAAAKCQ00+e8Gk3fHgvfeTMFQecXRkA\nAAC2FMNZsVUq+YskHI5Pcn5pAAAAWFUMwe7ajWTnFwUAAIAdzg52GRcip89aIRLUJJiP2AEA\nAJQkp17H7t6VmLiLIiK6bqN6FfxWCgAAABQr51/HThfUdcS8bzklFgAAoIQ57Tp22VzLVPD1\ncvQLaAEAAOA4p13HDgAAAA+X+pMn9NH/mjBhwuqT1tc4uXpoj7BByy8VoS0AAACopT7YpZ3b\n9emnnx69bn2N60fnro5JMfBdsQAAACVJ4aHY63Fb47Kj3K3E2yJy5cTWrZmW1rx/Zef870Sk\nXNmyTmkQAAAAyigMdhXTj03sNOHogwXLR3dabmN9Xd9X/qYrUmMAAABQR2Gwc2sx7Ov/ZOy4\nIiJpCetmrUto0++jF6pZWbli3Y7hb7So4qwWAQAAoITis2J9QgdPCRURSZr/86x1CU16T5nS\nrvjaAgAAgFqOXsfOo1wxNAMAAADHqT8r1s3L18/Pr5yHrXWMhnPxiQaHmwIAAIB6jn1JhPHm\noRUzZs4/eK3wTabbiQcS9CJd5p3fGMiFjAEAAEqMI8HOsGdShzafHbW1ii6oPF8sBgAAUKLU\nH4qVpOVffXZUJGTArC3HLty4sPRtEen3v3M3EmK3LJnYKUBEN2T9mVOLeld3dq8AAACwQX2w\nM8QfjxIJmvT1vHc7Ng7wCwht3k1k69krfvVbdIyYvGHv4r4yd/CHG+4UQ7MAAACwTn2wS9Ff\nFZFXmjfPPtRavX6jINGfTEwSERG3p/uM/CBUP3fRmiQndgkAAAC7HDgUKyIibq65H6GrVet5\nkaikX3J+bhjcUiTqeDxnxQIAAJQk9cGu+tO1RSTtXm5u0/lWEpGk5Ev5VruqTylqbwAAAFDB\ngevY1anbRWTuoiWJxuwlgXW7iUQeicuOeqdOHxYRdzfOigUAAChJDhyKrdW5Z1+dRA0NaxXx\nz2i9iFRv1qqNyNxPh8+O3Lp16Ycjp0aLBDWqz1mxAAAAJcmR3WpVen299OS5iM8OLLue8Z2I\nSIM+48Ysjp6xcHj3heY1dH0/GtDCeU0CAADAPsdOnvBpN3VfUmLs2tfruOX8vO2necM6NQ7Q\nBbV4c+Kmg/N7VXFmlwAAALDL4Q/CuXnVadGtzoMfKzYd9O/Ng/5t/injbsqtzAq+fPkEAABA\nyVG/xy5p/qtPPPHEBzutr7HzA0+fSgOXX7K+BgAAAJzO0evY2XDnN751AgAAoOQpPFga/5/u\nQ5eZL0xnup0oIqs/CIv9xNKaptuJBxJEdPVqcFYsAABASVIY7IJ7RARPem2uPnfBxbiYi9ZX\nD+gxbWAbPmAHAABQkpSmL5+uX529MSlDRC4v79905LZ3194YH2plXY9yfuU8nNQfAAAAFFK+\nW82jnJ+fiEi6X7XQ0NDKFf3MPwIAAODRoP54afXe83/sXQydAAAAoEic8kG4jOtxsbt//OGs\n1O3YoWuTOly+DgAA4CFQdbmTjAubJ/V4rka+i9gZE1cMfKHKcy/2Gf7pp8P7tAys1WrwikSj\ns9sEAACAPcp3rt3Z+UG7l2ccFRHxv5AkUktExHhgeu/eC4+KBLTu1y20dNK6yA0H5vfu7Vt5\nz9TWXsXUMgAAACxRusfOsHP6ezOOioQMmLUrYUHv7GvUXVvxrwlHRULGfH8setE/p3yz/sSP\n87rp5Ohnnyw8VWwtAwAAwBKFwc6wa/2MBJEu3yyf9+5L9XO+BFa/d9cKEek1fHg7H/N6boED\nxo0KFYles+NE8TQMAAAAyxQGuyOHI0VkSP8+gXmO3Rpif1wsIl1at6zyYKFbSNNWOpGY8xcM\nzuwTAAAAdigLdkmJJ/UiHYKD8n1uLv7kXhEJ/VuzWvlW9q/eXESu6lOc1SMAAAAUUHNWrLur\na94fk+IPJ4joWj3X0Mk9AQAAwAHKgp2bm7uI3DbkPbpqiD8eJSLdmjyff13jubNRIlJVxxdT\nAAAAlCRlwa56/UZBIjFHfr6Wu8iw6/u5ItKrRdP8lzUxREdvF5HQ2jW43AkAAEBJUngotknr\nN4JEVsyatf2mUUTEmLhk0VwR6dXhpSp51zOemD9tRoJImzfac4AWAACgRCkMdm6hfUZ108nR\nGR2eadgyLKxlw7ChUSIh4we9lpPrMu5ejF0yotPLo6JFdEPe7dOg2FoGAACAJYq/eaLWgG8j\n9el9xm1JOKAXEZGAHguWT875eomk+W/WHhwlIiK6l6dETu3q4/xWAQAAYIvyrxQTn9Cxm8/8\nv7jYuOv3pXTlxi0bV/bIva1WjXoiB4PavTH800kDmlZUURUAAADOoTKCeVRu3KZyYws3tJqQ\nlvm5F4EOAADgoXFWFPPw4iRYAACAh0rNBYoBAADwCCPYAQAAaATBDgAAQCMIdgAAABpBsAMA\nANAIgh0AAIBGEOwAAAA0wtHr2GVcOLBm09azN+9fifvpfKqFFeoP+XF+76J0BgAAAFUcCXbG\nxIUR7QeuumhzpfJ9HOoHAAAADnIg2OnXfz5u1UWRgE5DRvTsXLu85bW8ahepLwAAAKikPtgZ\nYqMX6kU3ZP2xb7r6FENHAAAAcIj6kydS9FdFJKJLZ1IdAADAo0R9sCtbtpyIuLk6etoFAAAA\nioX6YKf7W9teIpv3xxiLoR0AAAA4yoHr2FXp9fG8brcmvzcy8kKG8xsCAACAYxw4eSIx9ny1\nbu+8PmlC95qrgloElvcPbh1YodBquhenvNPGGR0CAABAEfXBLmXPzE6Do8z/1icc0MuBmBgL\nq3XxJ9gBAACUJPXBzq/1qC1bBttdjevYAQAAlCz1wc4rsFXHwGLoBAAAAEVS1IuWGA23fr1n\nEhER1zIVfL24CAoAAMBD4sBZsWYZFzZP79+mhnvZipWyVSzrXuO5HpM2c64sAADAw+BYsLsT\n82mX5uHjvttzMf/yi3GrPwlv3ubDnXeK3hkAAABUcSTY3dnwYbcJ3+t1LQbN25+clpmVLTMt\nef+8QS10+gOfRUzaZHB6qwAAALDFgWCXtGbRXL2EjFm6Zd6gltUefKrOzatay0HztiwdEyL6\nf/13eZIz2wQAAIA96oOd/tD+KJFew4e387F0s0+74cN7iUQdj2efHQAAQElSH+zS0u6KiH+l\nKtZWqFLJX0Su6lOK0BYAAADUUh/sypYtJyJp96zukDPcSxORcmXLFqEtAAAAqKU+2OmeDWkj\nMnfRkkSjpZuNiUsWzRUJbRikK3JzAAAAUM6BkycadH+7r06ihraPmB17Pd816zKux86OaD80\nSnTd+r/a0FktAgAAQAlHvimiyhsfTtu4b+CqVcNfWDVcF9QisLyriJhuJx5I0IuIBPSY9lnf\nWs7tEwAAAHY49BVgboEDlh565sXJH0ybs+diwgH9g1sCWg8b9/mkAU0r8tViAAAAJczRAOZW\nsemgf0cPmH7ryrn4hOv3RaR05aDgOtX4tlgAAICHpGgxzM3LN6Bxm4DGTmoGAAAAjnPsu2IB\nAADwyFEW7JLmv/rEE0+8Oj8p9992vTq/eBsHAABAfuyxAwAA0Ahln7Gr3nvBjVdNrmUq5P7b\n7l1cyxSxMwAAAKiiLNi5efn6eVn4tzUZd1PSxFjUUzMAAACggvpDsebP2H2w0/oaOz/w9Kk0\ncPmlIrQFAAAAtYrhM3Z3frvj/KIAAACwQ+HB0vj/dB+6LEVEREy3E0Vk9QdhsZ9YWtN0O/FA\ngoiuXo3qzuoRAAAACigMdsE9IoInvTb3wZeHXYyLuWh99YAe0wa24QN2AAAAJUlp+vLp+tXZ\nG5MyROTy8v5NR257d+2N8aFW1vUo51fOw0n9AQAAQCHlu9U8yvn5iYik+1ULDQ2tXNHP/CMA\nAAAeDeqPl1bvPf/H3iJiNFy5cKdcHf/cS58k7Vx63KtZ+yZ1vDgICwAAUPIcOyvWmLhicKta\n/qH/OZJn2bntfbq3DKzVavD8o5wWCwAAUOIcCXZ3dn7Yu/f8A3qd773U27lLb3sEjOrXOkB/\nYP7gjm/PTzQ6r0cAAAAo4ECwS1rz7xlHJWTMtpMnvn61fO5iXZt3/rko+sypb7rp9JETPl+v\nt1ECAAAATqc+2OkP7Y8S6TV8+CsVLXyWziNoyOdTuoh+YXSswQntAQAAQCn1wS4t7a6I+Feq\nYm2FWjXqichVfUoR2gIAAIBa6oNd2bLlROTGLauHWg330kSkXNmyRWgLAAAAaqkPdrpnQ9qI\nLP526QmL50cYE5csmisS2jBIV+TmAAAAoJwDJ0806P52X51Ej3q504eRcVcMD+Jdxt3Tmyd1\nbT80SnR9h/Zs6MQuAQAAYJcj1xKu0uvrpcdPvTzj+8+6f/+ZhdtDxiz9upfVj+ABAACgWDh2\ngWKfdp/v/2XTtH6tA/IvD2j85sRNv+z/vJ1P0TsDAACAKg5TH39sAAAgAElEQVR/+5dHjc5j\nF3Ue+63h1q/3TCIi4lqmgi/fJgYAAPCwFDWIuXn5+nnZXw0AAADFzbFDsSIiYjScO7B09oT3\n+3cOCxu0/JKIyMnVszefM/BtYgAAAA+Bg8HOmLhicKtagS37DP905ndbYmJSDEYRMV75aXh4\nYHDE7KN3nNokAAAA7HMo2F1bMTCs9/wD+oDW/UZN+0eX3OW3Pbw7BcjFVcP7Tt/JF4oBAACU\nLAeCnWHT9PcW63XdZh45Fr3on2O71Mu9Rddm4oZDm0YGScKMfy9PcmKXAAAAsEt9sDMeiFml\nl9BR494NsXBRE7eKnYcO7yISdTyefXYAAAAlSX2wu3ThjF6kZeMQayfU1qpRT0Su6lOK1BgA\nAADUcfSsWKPJ6rmvNm4CAABAsVEf7GoFPqMT2R4dbeVQ653NUUtFdM8E1ipiawAAAFDDgT12\noZ3fCZGEGePGR17IKHjbnaNfvj14rl6ChnQIdUZ7AAAAUMqBb55wazFs2pgNL8/4V/eam1r3\n6xZwSURuJ26cPeF89LrIDQl6kZAxXw8P5cvFAAAASpRD8cun3dRt0T79+4/bsue7mSIiEjNz\nVIz5Nl2LEfNWTW1n4YRZAAAAFCcH96u5VWw9dvOZv58+tnnn1rNnEvfE36vdrHHdwBbtw19q\nXNnDuS0CAABAiaIcMPUoV79FRP0WTusFAAAAReDo5U4AAADwiFG2x+7S8kERc0+rKlx/yI/z\nezvSEQAAAByiLNgZDSkxMTGqCpfv40g7AAAAcJSyYFe994Ibr5pUFXYt40g7AAAAcJSyYOfm\n5evnVcydAAAAoEiKePJExt2Ui3HRW7fuSzSYf7xb6MsoAAAAUCIcDXbGm4fm/6NNDU+fSjWe\ne7FTp5l7UkRE9k3zqddmzIZkoxM7BAAAgCIOBTtj4orBHZoNnrPnoohOp8tdfik5SS7u+eK1\n5weuuOasBgEAAKCMI8EuafH49xYe1bUYsTYxLTNlab/cG6oPWHZq8YAQ0S/+dNZOg9N6BAAA\ngAIOBLsTGxdF6nV9v177Zbc6XgVOvvAI6jNr2pggSfhuzxHnNAgAAABl1Ae7S0djY0S6vRZe\nxfLtXm3avCKiP5mYVMTWAAAAoIb6YGc0ZopI2TJWL3/i5lqUL6AFAACAY9QHOz9dVRE5c8Hq\nDrlTpw+LSFWdXxHaAgAAgFrqg51X0xa9RKJmfbP9joVbjYnzJ02NFunVoilXNAYAAChJDpw8\nUaXXO1NCJOHLDs91nhQZd/G3dBERybibcnr3/BGdwgZH6iVk/KDXrHwEDwAAAMXDkY/DubUY\nu3z5hd69F275pPuWT0REJGpwA5/B2TcH9FiwfHJr9tcBAACULMe+ecItsNeC/b9smjXkzcYB\nD5bqgtr1m7b250NLBwRy+gQAAEBJczyBedTo/O43nd+VVZJxN+WusUwF34IXtQMAAEAJckYW\n8yjnxxmwAAAAD5v6Q7EZd1PuZuRfcmH3/OlDe4SF9Rg6OzL+ptFZvQEAAEAFNcEu48LmSZ1r\nePpUmhL9ILzd2flhm+ZtB4+buzomZvXc4d2ffabVhzstXQgFAAAAxUpxsDMmzn+refgnWy6K\nyPnLl7KX3tnwYcRnB/QS0On9eWu3LJn2Vgud/sBnEe+tuFYs3QIAAMAqpZ+xu7Zm6oRIvei6\nzVz/r2EtK3uYl55aMnuuXqTLNzsihwS6iUjHTo38Qjt8ufjT+W+/8XEoJ1MAAACUHIV77PR7\nty/Wi27IvG9H5qY6kaT9u6NFZEj/PrnXN/F5ZejwLiIJa/Ycdn6zAAAAsE5ZsDMeO7JYRCK6\ndPbJs1R/aH+UiPQNa5n3asS1gpsEiSScu6h3YpsAAACwR1mwu3T5vIh0qVsn38HVhJPbRaTL\nC011+VbW6WqLyN20NCe1CAAAACUc++YJERE5cWyfXiSoSXCt/MtNpsyi9QQAAAAHKAt2ZcuW\nE5Hz+rxHV6/9fCRGRF55vkn+dQ0J8dtEpPbT1Z3UIgAAAJRQFux0QQ1DRRJ+OHwqd9G13dtW\niMiQsALnvl7btD5SCh+2BQAAQDFTeCi2Yfs32ohET5305aGbRhHjze2zZq0Q0b3ToW3eEyeM\nNzfP/HSxXqRX9861rBYDAABAMVD6GbsGfcaNCRF95KhmOvcnnnDXdZhxVHTdpvyjgznXGQ3n\nDkTO/ke7puFfJoiETHmnV5Xi6xkAAAAWKD55wqfd1PXbJnYKyPk5oNO0yG8H5Vy/7urqcS27\nD5+z56LoWoxYv35sC47DAgAAlDAVAczN/5XJm8+NvvXrPZO4lqng65XnvtX96wa16NS0bY8h\n7/RqWpFUBwAAUPLUZjA3L18/LwvL20091c4Z/QAAAMBBRbiOHQAAAB4lBDsAAACNINgBAABo\nBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEO\nAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABA\nIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2\nAAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAA\nGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGw\nAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA\n0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiC\nHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAA\ngEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ\n7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAA\nADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSC\nYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcA\nAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKAR\nBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsA\nAACNINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACN\nINgBAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgB\nAABoBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABo\nBMEOAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEO\nAABAIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABA\nIwh2AAAAGkGwAwAA0AiCHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2\n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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(ggplot2)\n",
    "\n",
    "# Ensure best_chromosome is a numeric vector\n",
    "best_chromosome <- as.numeric(best_chromosome)\n",
    "\n",
    "# Create a data frame for visualization\n",
    "selected_features_df <- data.frame(\n",
    "  Feature = factor(1:length(best_chromosome)),  # Feature indices\n",
    "  Selected = best_chromosome                    # Binary selection (1 = selected, 0 = not selected)\n",
    ")\n",
    "\n",
    "# Ensure there are no missing or incorrect values\n",
    "print(head(selected_features_df))  # Check structure\n",
    "\n",
    "#  visualization\n",
    "ggplot(selected_features_df, aes(x = Feature, y = Selected, fill = as.factor(Selected))) +\n",
    "  geom_bar(stat = \"identity\", color = \"black\", width = 0.7) +  # Adjust bar width\n",
    "  scale_fill_manual(values = c(\"0\" = \"gray85\", \"1\" = \"#2E8B57\"), name = \"Selected\") +  # Soft gray & deep green\n",
    "  labs(title = \" Selected Features via Genetic Algorithm\",\n",
    "       subtitle = \"Selected features (1) vs. Non-selected features (0)\",\n",
    "       x = \"Feature Index\", \n",
    "       y = \"Selection Status\") +  # Clearer label\n",
    "  theme_minimal(base_size = 14) +  # Improve readability\n",
    "  theme(\n",
    "    plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5), # Bold, centered title\n",
    "    plot.subtitle = element_text(size = 14, hjust = 0.5, color = \"gray40\"), # Styled subtitle\n",
    "    legend.position = \"top\",\n",
    "    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10), # Adjust rotation & spacing\n",
    "    axis.text.y = element_text(size = 12),  # Make y-axis text larger\n",
    "    panel.grid.major.x = element_blank(),  # Remove unnecessary grid lines\n",
    "    panel.grid.minor = element_blank(),\n",
    "    panel.grid.major.y = element_line(color = \"gray90\", linetype = \"dashed\")  # Subtle dashed grid lines\n",
    "  ) +\n",
    "  scale_x_discrete(breaks = seq(1, length(best_chromosome), by = 2)) +  # Reduce x-axis label crowding\n",
    "  scale_y_continuous(breaks = c(0, 1), labels = c(\"Not Selected\", \"Selected\"))  # Custom y-axis labels\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ab5eacd",
   "metadata": {},
   "source": [
    "### Final Confusion Matrix and Performance Metrics\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ab7f80ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nj1e9vmaKGJ60OOOLL7OfjnR/m7TgqCdrv1n7u52T8kFhUfbTUbrDaHB4QsrHRYUfpMwZFxMW\n4tiSvYKPU8aYghr05vRynhLPebBzjZlOnC9IrBY86PmcTzYtcJQfEhYzbkHGF19+/Mqw+++I\nrdps+tsZjtuiGSKe3ron7fHhVe83JCxq+H03+zBrnYiIWAuWPDbdMYAjfNbLU51ux0G0A/wl\nwGazNXcNAAAA8AN67AAAABRBsAMAAFAEwQ4AAEARBDsAAABFEOwAAAAUQbADAABQBMEOAABA\nEQQ7AAAARRDsAAAAFEGwAwAAUATBDgAAQBEEOwAAAEUQ7AAAABRBsAMAAFAEwQ4AAEARBDsA\nAABFEOwAAAAUQbADAABQBMEOF6utMwMq3bXkgOdmB5bcVdls5la/vvL9qUXerVaUen/9ZVQ2\ncqN9j8h+I55I3Xa0vCG1+1aq/bHX77j8aNa8J9KcVvJxO0orWTnKfnwnbypr0IZq7W0/8/Jj\nby07vC117vjY3qGOz2/s+Lm1P7+6vhbAxYRgB+Rs2OYx2RW8vy6nKWtpPBZzXu7alxMHXn/H\nzK1nmrsYPY4t/9P1Q58tPNfcdbRsBzLeThdN08Tyevr6Et+306L29pm9qYn9O3cbmJi8IvvE\nbyKioqKioq7+OS97RXLiwOtvjH0x97/iAww0E4IdLm6aptWV7Aq2rc9t2oL8Iy7liM3FuTPm\nTbMGayJ7Xxo9e0PT/jJ2TnjXZrO9m9DZm5Ws1gq/bEdp9v943DtuXJRI+tsZdXQ918PN3m4m\nZ7bOjrkvMTVPIhJSdpacO3Vg144dO3bs2Hf0XMnOlAnhUpz9VPwjqYXW5q4TaKkIdri49R0x\nIlokZ937Be6W5m16K1eikpLimrqsRhDUtnvs82tSkjQRy7L171maux40nDV3/Vu5InF3JIx9\nKFokJ2Vd7n973jmzYfboF/IsWvzSnJyUhMgOQdWLgjpEJqT8M22sJpbMxP+31PcQC6iNYIeL\n3E2DhkWL5K7fVjvZWXPfTzdL1AODb3GznvX7/ZkvOq4ACu0dO/7FLHeXr5UfzXpx/OAe7QMC\nAtr3GPxo6l4PfWXW73evfGJEZI/2ldcTjXhi5e7v/f4rHTxwcLyIyHtfmkWqr1krLEx/NDo0\nICAgtPeIp/51zLuS7M3sOyK094h57x2v1cbttXF17cGtMwMCuiRuFJGNiV2qL6HyejsuL+9c\navseg90cshrv2b6xzP11HQfr1pntPVynab/6rfrat/KjWdV1tu8R2eArHss2r11mFomLubtz\nj7uHRYuYl63d7OFCO+/3tqeL19w9b/1+f+aSiY795vu7O7ByyTKLSPTMOY+YgtwsN1w3Zsbs\ne00Rw28MsNTxf5PyozWuz/NwIHUcEJ2fB11fFb8ff8AD1/M1wEViywwRkbiUI18ujhaRqEWf\nuzSo2DHPJBK9+MsjKXEiIjO2OBad3pE8WBMREc0UERUVFRZi/zqFjHjrUIXTJk5vmRFeuSSs\nqln4jBmPVL5yfdvTBifvOO1oVLsMNyobuTkVa1e6PklExJS8q7p1VHx8uL3CCJMWnryrQndJ\nNlvFoZR4p2YRJk1Ei58xbUiNUu2v41xUxaG3RlTttDCnPRg+Y8tpm8320YLKbVW+etSCj9xv\nR9eRsK82ZNqsESE1ChURLWLBrorqoqreTEhYVFR1o/BH3z3hcY/bPyYSvfhLlwUn0kaKiDZj\ni31/Vn0UKt+QY38uzq9ws1U9SjdO0kRkZNqJ6pereuRSoy9729PnrdbzLp+B6v0mWnxK9VFw\nfOHqeEu7kk31N6qnHNdvXfXbrXq/NVt5PiA6Pw+6viqNcPwBDwh2uFhV/85UxhuXZOfIdbV+\nOk6vT9JERIt4LOPrc5XPnTuQNiFcRCR8Vk5p5XMnVo/VRESLX/Spxf6Pd4Ulp+o3wOnHq3Y7\nW4Xl05QJ4SKiJa2v+nHwR7CrLF2S1pc6tRaJW3LA/k7OnTvnRUkVu5Ltb3qSY084doTUEezc\nrGc7d2BpvCYi2qSNpW5XcvOUziPheJvO76fq9WTs6lP2Z+xBSYtfeqBqW45Gpnk7PP78ekh2\n9qBVtaL9fw/hMzZbHKnBstn+U+82iulQmeQc5Z9aPVbc1OHz3tYb7OxvTeIWOnatzVZhyZkX\nLSKizcqpek5HsCt+K17cfBXr5FpOZdw1Ja1xvFmb7dyB5WNNIiLxbxU7V13nAdH3edD3VWmE\n4w94QrDDxcrpd8ZdsqvYMkOrsdjx01H1Q+b6C1Xx+aJo53+o7e2cYpBd5e9x9fr2XgrTtM01\n29lKt8yoERgaFuzOnTm6MyUhQqsReSpbV/UqOegsqfI3NHrR5zVWr0w6noNdZbeh63q2E2kj\nQ8KiYl7b7W4lN0/pPRJVwc71J/TzRVHO2aOyY2/pIddGIWFRf3rrK5tH9u3UTFT2jTkCgP3T\n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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(ggplot2)\n",
    "\n",
    "# Create a data frame for the confusion matrix\n",
    "conf_matrix_df <- data.frame(\n",
    "  Prediction = c(\"M\", \"M\", \"R\", \"R\"),  # Predicted classes\n",
    "  Reference = c(\"M\", \"R\", \"M\", \"R\"),  # Actual classes\n",
    "  Count = c(26, 10, 7, 19)            # Counts from the confusion matrix\n",
    ")\n",
    "\n",
    "# Plot the confusion matrix\n",
    "ggplot(conf_matrix_df, aes(x = Reference, y = Prediction, fill = Count)) +\n",
    "  geom_tile(color = \"black\") +\n",
    "  geom_text(aes(label = Count), size = 6, color = \"white\") +\n",
    "  scale_fill_gradient(low = \"lightblue\", high = \"blue\") +\n",
    "  labs(\n",
    "    title = \"Confusion Matrix\",\n",
    "    subtitle = \"Model Predictions vs. Actual Classes\",\n",
    "    x = \"Actual Class\",\n",
    "    y = \"Predicted Class\"\n",
    "  ) +\n",
    "  theme_minimal(base_size = 14) +\n",
    "  theme(\n",
    "    plot.title = element_text(face = \"bold\", hjust = 0.5),\n",
    "    plot.subtitle = element_text(hjust = 0.5),\n",
    "    axis.text = element_text(size = 12),\n",
    "    axis.title = element_text(size = 14),\n",
    "    legend.position = \"none\"\n",
    "  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c937e5d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "          Reference\n",
       "Prediction  M  R\n",
       "         M 23 13\n",
       "         R 10 16"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<strong>Accuracy:</strong> 0.629032258064516"
      ],
      "text/latex": [
       "\\textbf{Accuracy:} 0.629032258064516"
      ],
      "text/markdown": [
       "**Accuracy:** 0.629032258064516"
      ],
      "text/plain": [
       " Accuracy \n",
       "0.6290323 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<strong>Sensitivity:</strong> 0.696969696969697"
      ],
      "text/latex": [
       "\\textbf{Sensitivity:} 0.696969696969697"
      ],
      "text/markdown": [
       "**Sensitivity:** 0.696969696969697"
      ],
      "text/plain": [
       "Sensitivity \n",
       "  0.6969697 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<strong>Specificity:</strong> 0.551724137931035"
      ],
      "text/latex": [
       "\\textbf{Specificity:} 0.551724137931035"
      ],
      "text/markdown": [
       "**Specificity:** 0.551724137931035"
      ],
      "text/plain": [
       "Specificity \n",
       "  0.5517241 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Confusion matrix for the model with selected features\n",
    "conf_matrix$table\n",
    "\n",
    "# Accuracy, Sensitivity, and Specificity\n",
    "conf_matrix$overall[\"Accuracy\"]\n",
    "conf_matrix$byClass[c(\"Sensitivity\")]\n",
    "conf_matrix$byClass[c( \"Specificity\")]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7c63f3e",
   "metadata": {},
   "source": [
    "## Save Result\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "aac82c9e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results have been saved as .rds files in the working directory.\n"
     ]
    }
   ],
   "source": [
    "# Save GA results \n",
    "saveRDS(ga_model, \"ga_model.rds\") # Save the GA model\n",
    "saveRDS(final_knn_model, \"final_knn_model.rds\") # Save the final k-NN model\n",
    "saveRDS(conf_matrix, \"conf_matrix.rds\") # Save the confusion matrix\n",
    "\n",
    "cat(\"Results have been saved as .rds files in the working directory.\\n\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir",
   "path": "C:\\ProgramData\\jupyter\\kernels\\ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.4.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
